{"version":3,"sources":["reportWebVitals.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AddPersonForm","props","useState","person","setPerson","onSubmit","e","handleSubmit","preventDefault","type","placeholder","onChange","target","value","PeopleList","showbox","setShowbox","swap","listItems","data","map","val","index","onClick","ContactManager","contacts","setContacts","name","ReactDOM","render","document","getElementById"],"mappings":"yKAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,cCDd,SAASQ,EAAcC,GACrB,MAA8BC,mBAAS,IAAvC,mBAAQC,EAAR,KAAgBC,EAAhB,KAaA,OACE,uBAAMC,SARR,SAAsBC,GACN,KAAXH,IACDF,EAAMM,aAAaJ,GACnBC,EAAU,KAEZE,EAAEE,kBAGF,UACE,uBAAOC,KAAK,OACVC,YAAY,sBACZC,SAfN,SAAsBL,GACpBF,EAAUE,EAAEM,OAAOC,QAefA,MAAOV,IACT,wBAAQM,KAAK,SAAb,oBAKN,SAASK,EAAWb,GAClB,MAA8BC,oBAAS,GAAvC,mBAAOa,EAAP,KAAgBC,EAAhB,KAGA,SAASC,IACPD,GAAYD,GAGd,IAAMG,EANMjB,EAAMkB,KAMIC,KAAI,SAACC,EAAKC,GAAN,OACxB,+BAEC,oBAAGC,QAASN,EAAZ,gBAAsBI,KACvB,sBACEN,GAAY,uBACZN,KAAO,OACPC,YAAY,8BANLY,MAWX,OAAO,6BAAKJ,IAGd,SAASM,EAAevB,GACtB,MAAgCC,mBAASD,EAAMkB,MAA/C,mBAAOM,EAAP,KAAiBC,EAAjB,KAMA,OACE,gCACE,cAAC1B,EAAD,CAAeO,aANnB,SAAmBoB,GACjBD,EAAY,GAAD,mBAAKD,GAAL,CAAeE,QAMxB,cAACb,EAAD,CAAYK,KAAMM,OAMxBG,IAASC,OACP,cAACL,EAAD,CAAgBL,KAHD,CAAC,4CAIhBW,SAASC,eAAe,SAM1BxC,M","file":"static/js/main.f29befa8.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport React, { useState } from 'react';\r\nimport react from 'react';\r\n\r\nfunction AddPersonForm(props) {\r\n  const [ person, setPerson ] = useState('');\r\n    \r\n  function handleChange(e) {\r\n    setPerson(e.target.value);\r\n  }\r\n    \r\n  function handleSubmit(e) {\r\n    if(person !== '') {\r\n      props.handleSubmit(person);\r\n      setPerson('');\r\n    }\r\n    e.preventDefault();\r\n  }\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" \r\n        placeholder=\"Post a new question\" \r\n        onChange={handleChange} \r\n        value={person} />\r\n      <button type=\"submit\">Add</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nfunction PeopleList(props) {\r\n  const [showbox, setShowbox] = useState(false);\r\n  const arr = props.data;\r\n\r\n  function swap() {\r\n    setShowbox(!showbox);\r\n  }\r\n\r\n  const listItems = arr.map((val, index) =>\r\n    <li key={index}\r\n    \r\n    ><b onClick={swap}> > {val}</b>\r\n    <p></p>\r\n    {(showbox) && <input\r\n      type = \"text\"\r\n      placeholder=\"Respond to the question\" \r\n    />}\r\n    </li>\r\n    \r\n  );\r\n  return <ul>{listItems}</ul>;\r\n}\r\n\r\nfunction ContactManager(props) {\r\n  const [contacts, setContacts] = useState(props.data);\r\n\r\n  function addPerson(name) {\r\n    setContacts([...contacts, name]);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <AddPersonForm handleSubmit={addPerson} />\r\n      <PeopleList data={contacts} />\r\n    </div>\r\n  );\r\n}\r\nconst contacts = [\"Example Question. Post your own above!\"];\r\n\r\nReactDOM.render(\r\n  <ContactManager data={contacts} />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}